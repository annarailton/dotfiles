[user]
    email = anna.railton@gmail.com
    name = annarailton
    signingkey = 6559695657CC220B
[core]
    editor = nano -r 72
[push]
	default = current
	autoSetupRemote = true
[alias]
    a = add
    b = for-each-ref --sort=committerdate refs/heads/ --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(color:red)%(objectname:short)%(color:reset) - %(contents:subject) - %(authorname) (%(color:green)%(committerdate:relative)%(color:reset))'
    bb = rev-parse --abbrev-ref HEAD  # get current branch name
    bclean = "!f() { git branch --merged ${1-main} | grep -v " ${1-main}$" | xargs -r git branch -d; }; f"
    bm = "!f() { git b --merged; }; f"
    bn = "!f() { git b --no-merged; }; f"
    c = commit
    ca = commit --amend
    cf = commit --fixup
    cm = commit -m
    cn = commit -n -m
    co = checkout
    cob = "!f() { git checkout -b annarailton/$1; }; f"
    cobb = checkout -b
    com = checkout main
    cp = cherry-pick
    cpc = cherry-pick --continue
    diffc = diff --cached
    fixup = "!git log -n 50 --pretty=format:'%h %s' --no-merges | fzf | cut -c -7 | xargs -o git commit --fixup"
    hist = log --pretty=format:\"%h %ad | %s%d [%an]\" --graph --date=short
    last = rev-parse HEAD
    lines = diff --shortstat main
    logn = log --name-only
    movebranch = "!f() { \
    : git checkout ; \
    git rebase --onto $2 $(git merge-base $1 @); \
}; f"  # git movebranch old-home new-home
    p = pull
    pullr = pull --rebase
    pushf = push --force-with-lease
    rb = rebase
    rbc = rebase --continue
    rbi = rebase -i
    st = status -s
    stt = status
    up = !git fetch origin && git rebase origin/main --autostash
    wip = commit -a -n -m "WIP"
[filter "lfs"]
    clean = git-lfs clean -- %f
    smudge = git-lfs smudge -- %f
    process = git-lfs filter-process
    required = true
[init]
    templateDir = ~/.config/git/template/
[rebase]
	autosquash = true
[pull]
	ff = only
[merge]
	conflictstyle = diff3
